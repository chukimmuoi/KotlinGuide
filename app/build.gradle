apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// TODO uncomment line below after adding fabric api secret and key to fabric.properties
apply plugin: 'io.fabric' // Fabric crash. Add key in AndroidManifest.xml.

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.developers.chukimmuoi.kotlinguide"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
}

dependencies {
    final DAGGER_VERSION = '2.11'
    final JSR250_VERSION = '1.0'
    final LOG_VERSION = '4.5.1'
    final RX_JAVA_VERSION = '2.1.3'
    final RX_KOTLIN_VERSION = '2.1.0'
    final RX_ANDROID_VERSION = '2.0.1'
    final SQLBRITE_VERSION = '2.0.0'
    final GSON_VERSION = '2.8.1'
    final RETROFIT_VERSION = '2.3.0'
    final SUPPORT_LIBRARY_VERSION = '26.0.2'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // Dagger.
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    provided "javax.annotation:jsr250-api:$JSR250_VERSION" // Auto generate code.
    kapt daggerCompiler // Use Kotlin.

    // Log.
    compile "com.jakewharton.timber:timber:$LOG_VERSION"

    // Crash.
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true
    }

    // Rx.
    compile "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
    compile "io.reactivex.rxjava2:rxkotlin:$RX_KOTLIN_VERSION"
    compile "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"

    // Sqlbrite.
    compile("com.squareup.sqlbrite2:sqlbrite:$SQLBRITE_VERSION") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile "com.squareup.sqlbrite2:sqlbrite-kotlin:$SQLBRITE_VERSION"

    // Gson.
    compile "com.google.code.gson:gson:$GSON_VERSION"

    // Retrofit.
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    // Support library.
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
}
